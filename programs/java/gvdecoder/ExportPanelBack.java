/*
 * ExportPanel.java
 *
 * Created on 09 January 2007, 15:11
 */

package gvdecoder;

/**
 *
 * @author  Gil
 */
public class ExportPanel extends javax.swing.JPanel {
    Viewer2 vw;
    /** Creates new form ExportPanel */
    public ExportPanel(Viewer2 vw) {
        this.vw=vw;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        movieName = new javax.swing.JTextField();
        autoName = new javax.swing.JButton();
        chooseName = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        startRange = new javax.swing.JTextField();
        endRange = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        skipFrames = new javax.swing.JTextField();
        sumFrames = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        sizeToRealPixels = new javax.swing.JCheckBox();
        showDecorations = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        imageTypes = new javax.swing.JComboBox();
        addViewer = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jCheckBox4 = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        movQuality = new javax.swing.JComboBox();
        movCodec = new javax.swing.JComboBox();
        jTextField7 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        startEncoding = new javax.swing.JButton();
        cancelEncoding = new javax.swing.JButton();
        saveAsDefaults = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();

        setLayout(null);

        jPanel1.setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("File"));
        movieName.setText("movie");
        jPanel1.add(movieName);
        movieName.setBounds(10, 20, 100, 20);

        autoName.setFont(new java.awt.Font("Arial", 0, 10));
        autoName.setLabel("auto");
        autoName.setMargin(new java.awt.Insets(2, 5, 2, 5));
        autoName.setMinimumSize(new java.awt.Dimension(35, 19));
        autoName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoNameActionPerformed(evt);
            }
        });

        jPanel1.add(autoName);
        autoName.setBounds(120, 20, 37, 20);

        chooseName.setFont(new java.awt.Font("Arial", 0, 10));
        chooseName.setText("..");
        chooseName.setMargin(new java.awt.Insets(2, 5, 2, 5));
        chooseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseNameActionPerformed(evt);
            }
        });

        jPanel1.add(chooseName);
        chooseName.setBounds(160, 20, 30, 20);

        add(jPanel1);
        jPanel1.setBounds(0, 0, 200, 50);

        jPanel2.setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Range"));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 10));
        jLabel1.setText("start");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 20, 30, 13);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 10));
        jLabel2.setText("stop");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(10, 50, 30, 13);

        startRange.setColumns(5);
        startRange.setText("0");
        startRange.setToolTipText("Navigator auto sets range to zoom.");
        startRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startRangeActionPerformed(evt);
            }
        });

        jPanel2.add(startRange);
        startRange.setBounds(50, 20, 51, 19);

        endRange.setColumns(5);
        endRange.setText("-1");
        endRange.setToolTipText("Use -1 for single frame. Note: navigator sets range to zoom");
        endRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endRangeActionPerformed(evt);
            }
        });

        jPanel2.add(endRange);
        endRange.setBounds(50, 50, 51, 19);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 10));
        jLabel3.setText("skip");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(120, 20, 30, 13);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 10));
        jLabel4.setText("sum");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(120, 50, 30, 13);

        skipFrames.setColumns(3);
        skipFrames.setText("1");
        skipFrames.setToolTipText("show every Nth frame");
        skipFrames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipFramesActionPerformed(evt);
            }
        });

        jPanel2.add(skipFrames);
        skipFrames.setBounds(160, 20, 30, 19);

        sumFrames.setColumns(3);
        sumFrames.setText("1");
        sumFrames.setToolTipText("sum over N frames (not always supported)");
        sumFrames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumFramesActionPerformed(evt);
            }
        });

        jPanel2.add(sumFrames);
        sumFrames.setBounds(160, 50, 30, 19);

        add(jPanel2);
        jPanel2.setBounds(0, 50, 200, 80);

        jPanel3.setLayout(null);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Appearance"));
        sizeToRealPixels.setFont(new java.awt.Font("Arial", 0, 10));
        sizeToRealPixels.setText("Min. Pixels");
        sizeToRealPixels.setToolTipText("Uses viewer dimensions unless checked.");
        sizeToRealPixels.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        sizeToRealPixels.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel3.add(sizeToRealPixels);
        sizeToRealPixels.setBounds(10, 20, 80, 13);

        showDecorations.setFont(new java.awt.Font("Arial", 0, 10));
        showDecorations.setText("Show extras");
        showDecorations.setToolTipText("Show decorations (rois, rulers, etc)");
        showDecorations.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        showDecorations.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel3.add(showDecorations);
        showDecorations.setBounds(110, 20, 80, 15);

        add(jPanel3);
        jPanel3.setBounds(0, 130, 200, 40);

        jPanel4.setLayout(null);

        jPanel5.setLayout(null);

        imageTypes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "jpg", "tif", "bmp", "gif", "png" }));
        jPanel5.add(imageTypes);
        imageTypes.setBounds(10, 10, 60, 22);

        addViewer.setFont(new java.awt.Font("Arial", 0, 10));
        addViewer.setText("add viewer");
        addViewer.setToolTipText("include javascript flipbook viewer");
        addViewer.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        addViewer.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel5.add(addViewer);
        addViewer.setBounds(80, 10, 80, 20);

        jTabbedPane1.addTab("Images", jPanel5);

        jPanel6.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 10));
        jLabel5.setText("FPS");
        jPanel6.add(jLabel5);
        jLabel5.setBounds(0, 10, 20, 20);

        jTextField6.setText("20");
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jPanel6.add(jTextField6);
        jTextField6.setBounds(20, 10, 30, 19);

        jCheckBox4.setFont(new java.awt.Font("Arial", 0, 10));
        jCheckBox4.setText("color");
        jCheckBox4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel6.add(jCheckBox4);
        jCheckBox4.setBounds(90, 10, 60, 20);

        jTabbedPane1.addTab("AVI", jPanel6);

        jPanel7.setLayout(null);

        movQuality.setFont(new java.awt.Font("Arial", 0, 10));
        movQuality.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "low", "med", "hi", "max" }));
        movQuality.setToolTipText("select encoding quality");
        movQuality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movQualityActionPerformed(evt);
            }
        });

        jPanel7.add(movQuality);
        movQuality.setBounds(58, 10, 50, 22);

        movCodec.setFont(new java.awt.Font("Arial", 0, 10));
        movCodec.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "cinepak", "animation", "H.263", "Sorensen", "Sorensen3", "mpeg-4" }));
        movCodec.setToolTipText("select encoder");
        movCodec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movCodecActionPerformed(evt);
            }
        });

        jPanel7.add(movCodec);
        movCodec.setBounds(110, 10, 75, 22);

        jTextField7.setText("20");
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jPanel7.add(jTextField7);
        jTextField7.setBounds(20, 10, 30, 20);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 10));
        jLabel6.setText("FPS");
        jPanel7.add(jLabel6);
        jLabel6.setBounds(0, 10, 20, 20);

        jTabbedPane1.addTab("mov", jPanel7);

        jPanel4.add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 0, 200, 70);

        startEncoding.setBackground(new java.awt.Color(102, 255, 102));
        startEncoding.setFont(new java.awt.Font("Arial", 0, 10));
        startEncoding.setText("Go!");
        startEncoding.setToolTipText("start encoding");
        startEncoding.setMargin(new java.awt.Insets(2, 3, 2, 3));
        startEncoding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startEncodingActionPerformed(evt);
            }
        });

        jPanel4.add(startEncoding);
        startEncoding.setBounds(0, 80, 50, 21);

        cancelEncoding.setBackground(new java.awt.Color(255, 153, 153));
        cancelEncoding.setFont(new java.awt.Font("Arial", 0, 10));
        cancelEncoding.setText("Cancel");
        cancelEncoding.setToolTipText("stop encoding");
        cancelEncoding.setMargin(new java.awt.Insets(2, 5, 2, 5));
        cancelEncoding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelEncodingActionPerformed(evt);
            }
        });

        jPanel4.add(cancelEncoding);
        cancelEncoding.setBounds(50, 80, 50, 21);

        saveAsDefaults.setFont(new java.awt.Font("Arial", 0, 10));
        saveAsDefaults.setText("save default");
        saveAsDefaults.setToolTipText("save settings as defaults");
        saveAsDefaults.setMargin(new java.awt.Insets(2, 5, 2, 5));
        saveAsDefaults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsDefaultsActionPerformed(evt);
            }
        });

        jPanel4.add(saveAsDefaults);
        saveAsDefaults.setBounds(120, 80, 80, 20);

        jPanel4.add(jProgressBar1);
        jProgressBar1.setBounds(0, 110, 200, 20);

        add(jPanel4);
        jPanel4.setBounds(0, 170, 200, 140);
        setPreferredSize(new java.awt.Dimension(215,340));
    }// </editor-fold>

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
    }

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
    }

    private void sumFramesActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
    }

    private void skipFramesActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
    }

    private void endRangeActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
    }

    private void startRangeActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
    }

    private void saveAsDefaultsActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
    }

    private void cancelEncodingActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
    }

    private void startEncodingActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    //1 determine what type of data to encode.
    int i=jTabbedPane1.getSelectedIndex();
    if (i==0){
		System.out.println("images saved");
		System.out.println("prefix = "+movieName.getText());
		System.out.println("start="+startRange.getText());
		System.out.println("end="+endRange.getText());
		System.out.println("sumframes="+sumFrames.getText());
		System.out.println("skipframes="+skipFrames.getText());
		System.out.println("size to real="+sizeToRealPixels.isSelected());
   }

     if (i==1) System.out.println("avi saved");
    if (i==2) System.out.println("mov saved");



    }

    private void chooseNameActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
    }

    private void autoNameActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
     //AnalysisHelper.getAnalysisHelper().unique_name(getImage());
    }

    private void movCodecActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
    }

    private void movQualityActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
    }


    // Variables declaration - do not modify
    private javax.swing.JCheckBox addViewer;
    private javax.swing.JButton autoName;
    private javax.swing.JButton cancelEncoding;
    private javax.swing.JButton chooseName;
    private javax.swing.JTextField endRange;
    private javax.swing.JComboBox imageTypes;
    private javax.swing.JButton startEncoding;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JComboBox movCodec;
    private javax.swing.JComboBox movQuality;
    private javax.swing.JTextField movieName;
    private javax.swing.JButton saveAsDefaults;
    private javax.swing.JCheckBox showDecorations;
    private javax.swing.JCheckBox sizeToRealPixels;
    private javax.swing.JTextField skipFrames;
    private javax.swing.JTextField startRange;
    private javax.swing.JTextField sumFrames;
    // End of variables declaration

}
